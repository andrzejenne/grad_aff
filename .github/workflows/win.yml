name: win-ci
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-win-ci
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows-static
            vcpkgCommitId: '56a12f6ee9fef0991a25a4c7e0a0b2e843bfe5ad'
            vcpkgPackages: 'libsquish lzo boost-gil boost-algorithm tsl-ordered-map pegtl'
            configuration: 'x64.*'

    steps:
    - uses: actions/checkout@v1
    - name: Cache vcpkg artifacts
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/vcpkg/
        key: ${{ matrix.vcpkgCommitId }}-${{ matrix.vcpkgPackages }}-${{ matrix.os }}

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v0
      id: runvcpkg
      with:
        vcpkgArguments: ${{ matrix.vcpkgPackages }}
        vcpkgTriplet: ${{ matrix.triplet }}
        vcpkgGitCommitId: ${{ matrix.vcpkgCommitId }}

    - name: Run CMake+Ninja
      uses: lukka/run-cmake@v0
      id: runcmake
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildWithCMakeArgs: ' -- install -v'
        buildDirectory: '${{ runner.workspace }}/b/ninja/'
        cmakeAppendedArgs: '-G Ninja -DBUILD_WITH_OIIO=OFF -DBUILD_WITH_OPENSSL=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install'
        
    - uses: actions/upload-artifact@v1
      with:
        name: grad_aff-${{ matrix.triplet }}
        path: install

    - name: clean vcpkg artifact that must not be cached
      run: |
        rm -rfv ${{ github.workspace }}/vcpkg/buildtrees
        rm -rfv ${{ github.workspace }}/vcpkg/packages
        rm -rfv ${{ github.workspace }}/vcpkg/downloads
      shell: bash
